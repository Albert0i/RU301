# The port on which the Sentinel should run
port 5000

# monitor the Primary on a specific IP address and port. Having the address of the Primary the Sentinels will be able to discover all the replicas on their own. The last argument on this line is the number of Sentinels needed for quorum. In our example - the number is 2.
sentinel monitor myprimary 127.0.0.1 6379 2

# how many milliseconds should an instance be unreachable so that itâ€™s considered down
sentinel down-after-milliseconds myprimary 5000

# if a Sentinel voted another Sentinel for the failover of a given master, it will wait this many milliseconds to try to failover the same master again.
sentinel failover-timeout myprimary 60000

# In order for Sentinels to connect to Redis server instances when they are configured with requirepass, the Sentinel configuration must include the sentinel auth-pass directive.
sentinel auth-pass myprimary 123456

#
# Redis configuration file example
# https://redis.io/docs/latest/operate/oss_and_stack/management/config-file/
#

#
# redis-server ./sentinel1.conf --sentinel
# redis-cli -p 5000
#
# SENTINEL master myprimary
# SENTINEL replicas myprimary
# SENTINEL sentinels myprimary
# SENTINEL get-master-addr-by-name myprimary

# Generated by CONFIG REWRITE
protected-mode no
latency-tracking-info-percentiles 50 99 99.9
dir "D:\\RU\\RU301\\homebrew-ha-with-sentinels"
user default on nopass sanitize-payload ~* &* +@all
sentinel myid 1991665c54255fb13625d0e21d867061fcd2f558
sentinel config-epoch myprimary 0
sentinel leader-epoch myprimary 0
sentinel current-epoch 0

sentinel known-replica myprimary 127.0.0.1 6381

sentinel known-replica myprimary 127.0.0.1 6380

sentinel known-sentinel myprimary 127.0.0.1 5001 23e552c4ada4efc6a39cbe94d3a5220f5bc0c586

sentinel known-sentinel myprimary 127.0.0.1 5002 26fe45699a321396561719e0925b8e85844c0adf
